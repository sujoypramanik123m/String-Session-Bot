import traceback
from pyrogram import Client
from pyrogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from Script import text
from config import ADMIN
from .main import generate_session, ask_ques, buttons_ques

@Client.on_callback_query()
async def callback_query_handler(client, query: CallbackQuery):
    data = query.data

    try:
        if data == "start":
            await query.message.edit_text(
                text.START.format(query.from_user.mention),
                disable_web_page_preview=True,
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton('·¥Ä ô·¥è·¥ú·¥õ', callback_data='about'),
                     InlineKeyboardButton(' ú·¥á ü·¥ò', callback_data='help')],
                    [InlineKeyboardButton('…¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á s·¥õ Ä…™…¥…¢ s·¥áss…™·¥è…¥', callback_data='generate')]
                ])
            )

        elif data == "help":
            await query.message.edit_text(
                text.HELP.format(query.from_user.mention),
                disable_web_page_preview=True,
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton('·¥ú·¥©·¥Ö·¥Ä·¥õ·¥áÍú±', url='https://telegram.me/ProToppers'),
                     InlineKeyboardButton('Íú±·¥ú·¥©·¥©·¥è Ä·¥õ', url='https://telegram.me/SuperToppers0')],
                    [InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data="start"),
                     InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data="close")]
                ])
            )

        elif data == "about":
            await query.message.edit_text(
                text.ABOUT,
                disable_web_page_preview=True,
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton('üí•  Ä·¥á·¥ò·¥è', url='https://github.com'),
                     InlineKeyboardButton('üë®‚Äçüíª ·¥è·¥°…¥·¥á Ä', user_id=int(ADMIN))],
                    [InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data="start"),
                     InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data="close")]
                ])
            )

        elif data == "close":
            await query.message.delete()
            await query.answer()

        elif data == "generate":
            await query.answer()
            await query.message.reply(ask_ques, reply_markup=InlineKeyboardMarkup(buttons_ques))

        elif data in ["pyrogram", "pyrogram_bot", "telethon", "telethon_bot"]:
            await query.answer()
            if data == "pyrogram":
                await generate_session(client, query.message)
            elif data == "pyrogram_bot":
                await query.answer("¬ª ·¥õ ú·¥á s·¥áss…™·¥è…¥ …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á·¥Ö ·¥°…™ ü ü  ô·¥á ·¥è“ì ·¥© è Ä·¥è…¢ Ä·¥Ä·¥ç ·¥†2.", show_alert=True)
                await generate_session(client, query.message, is_bot=True)
            elif data == "telethon":
                await generate_session(client, query.message, telethon=True)
            elif data == "telethon_bot":
                await generate_session(client, query.message, telethon=True, is_bot=True)

    except Exception as e:
        print(traceback.format_exc())
        await query.message.reply(f"**Error -** `{e}`")
